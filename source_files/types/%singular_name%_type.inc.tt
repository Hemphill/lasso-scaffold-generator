[
output_none;
  if( Lasso_TagExists( '<%= @namespace + '_' + @singular_name %>') == false);
    define_type('<%= @namespace + '_' + @singular_name %>');
      /* public attributes */
      local(
        // attribute <%= spacer(10, @largest_name) %>default <%= spacer(4, @largest_default) %>// database field
        <%= declare_attributes(@attributes) %>

        // Internal State
        <%= declare_attribute({"name"=>"loaded", "type"=>"boolean", "usage"=>"internal"}, @largest_name, @largest_default) %>
        <%= declare_attribute({"name"=>"error",  "type"=>"string",  "usage"=>"internal"}, @largest_name, @largest_default) %>
        <%= declare_attribute({"name"=>"lasso_error",  "type"=>"string",  "usage"=>"internal"}, @largest_name, @largest_default) %>
      );

      define_tag('onCreate',
        <%= define_tag_inputs(@attributes) %>
      );

        // Note: we set these variables using the set method because weird things happen when you set them directly in onCreate
        <%= assign_inputs(@attributes) %>

        self->'id' ? self->find();

      /define_tag;


      define_tag('set',
        <%= define_tag_inputs(@attributes) %>
      );
        <%= set_attributes(@attributes) %>

        !self->loaded ? self->find();

      /define_tag;

      define_tag('find',
        -optional='id'
      );
        if(!self->loaded);
          local_defined('id') && #id ? self->'id' = #id;

          local(
            'criteria'=array(),
          );

          if(self->id);
            #criteria->insert(-op = 'eq');
            #criteria->insert('id' = self->id);
            // You can use `else` statements here to find by data other that the ID
          /if;

          inline( -search,
            -Database=$vDB_Config,
            -Table='<%= @plural_name %>',
            -UserName=$vDB_UserName,
            -Password=$vDB_Password,
            #criteria,
            -op='eq', 'site' = $vSite,
            -maxrecords = 1
          );

            records;
              self->load_fields;
            /records;

          /inline;

        /if; // skip if already loaded
      /define_tag;


      define_tag('load_fields');
        <%= load_fields(@attributes) %>

        self->'loaded' = true;
      /define_tag;


      define_tag('create',
        <%= define_tag_inputs(@attributes) %>
      );

        <%= assign_inputs(@attributes) %>

        if(!self->id);
          inline( -add,
            -Database=$vDB_Config,
            -Table='<%= @plural_name %>',
            -UserName=$vDB_UserName,
            -Password=$vDB_Password,
            <%= inline_params(@attributes, @largest_name, false, false) %>
            'retailer_id' = $vRetailer_ID,
            'site' = $vSite,
          );

            if(Error_CurrentError != Error_NoError);
              self->'error' = 'Error creating <%= @singular_name %>.';
              self->'lasso_error' = Error_CurrentError;
            /if;

          /inline;
        else;
         self->'error' = 'Record already exists.';
        /if;
      /define_tag;

      define_tag('update',
        <%= define_tag_inputs(@attributes) %>
      );

        <%= assign_inputs(@attributes) %>

        inline( -update,
          -Database=$vDB_Config,
          -Table='<%= @plural_name %>',
          -UserName=$vDB_UserName,
          -Password=$vDB_Password,
          -KeyField = 'id',
          -KeyValue = self->id,
          <%= inline_params(@attributes, @largest_name, false, false) %>
        );

          if(Error_CurrentError != Error_NoError);
            self->'error' = 'Error updating <%= @singular_name %>.';
            self->'lasso_error' = Error_CurrentError;
          /if;

        /inline;

      /define_tag;

      define_tag('save',
        <%= define_tag_inputs(@attributes) %>
      );

        <%= assign_inputs(@attributes) %>

        if(self->id);
          self->update;
        else;
          self->create;
        /if;

      /define_tag;

      define_tag('render');

        if(self->loaded == true);
          return(include('/<%= @plural_name %>/display/<%= @singular_name %>.inc'));
        else;
          return('');
        /if;

      /define_tag;


    /define_type;
  /if;
/output_none;]


